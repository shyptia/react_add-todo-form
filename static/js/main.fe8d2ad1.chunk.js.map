{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","setTitle","userSelect","setUserSelect","todosToRender","setTodosToRender","isErrorOnUserSelect","setErrorOnUserSelect","isErrorOnTitleInput","setErrorOnTitleInput","action","method","onSubmit","event","preventDefault","trim","userName","maxTodoId","Math","max","userToAdd","current","htmlFor","type","value","placeholder","onChange","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCHMI,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,UACAT,EACEM,EADFN,KAGF,OACE,0BACE,UAASO,EACTJ,UAAWO,IACT,WACA,CAAE,sBAAuBD,IAJ7B,UAOE,oBAAIN,UAAU,kBAAd,SACGK,IAGFR,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCrBlBW,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAAAP,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKC,UCZzB,GACb,CACEA,GAAI,EACJN,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEK,GAAI,EACJN,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEK,GAAI,EACJN,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEK,GAAI,GACJN,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BC3CX,IAAMU,EChBS,CACb,CACEL,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACER,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACER,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXM,OAAQ,IDD0BF,KAAI,SAAAP,GACxC,OAAO,2BACFA,GADL,IAEEN,MAXkBe,EAWCT,EAAKS,OAVnBC,EAAgBC,MAAK,SAAAjB,GAAI,OAAIA,EAAKO,KAAOQ,MAAW,QAD7D,IAAsBA,KAeTG,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA0CH,mBAASP,GAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAAoDL,oBAAS,GAA7D,mBAAOM,EAAP,KAA4BC,EAA5B,KACA,EAAoDP,oBAAS,GAA7D,mBAAOQ,EAAP,KAA4BC,EAA5B,KAwCA,OACE,sBAAKzB,UAAU,MAAf,UACE,+CAEA,uBACE0B,OAAO,aACPC,OAAO,OACPC,SAnCe,SAACC,GAMpB,GALAA,EAAMC,iBAENL,GAAsBpB,EAAM0B,QAC5BR,GAAsBL,GAED,KAAjBb,EAAM0B,QAAkBb,EAA5B,CAIA,IAtCoBc,EAsCdC,EAAYC,KAAKC,IAAL,MAAAD,KAAI,YAAQd,EAAcV,KAAI,SAAAP,GAAI,OAAIA,EAAKC,QACvDgC,GAvCcJ,EAuCad,EAtC5BL,EAAgBC,MAAK,SAAAjB,GAAI,OAAKA,EAAKC,OAASkC,MAAc,MAwC/DX,GAAiB,SAAAgB,GAAO,4BACnBA,GADmB,CAEtB,CACEjC,GAAI6B,EAAY,EAChB5B,QACAC,WAAW,EACXM,OAAQwB,EAAYA,EAAUhC,GAAK,KACnCP,KAAMuC,QAIVnB,EAAS,IACTE,EAAc,MAOZ,UAKE,sBAAKnB,UAAU,QAAf,UACE,uBACEsC,QAAQ,QACRtC,UAAU,QAFZ,mCAOA,uBACE,UAAQ,aACRuC,KAAK,OACLnC,GAAG,QACHN,KAAK,QACL0C,MAAOnC,EACPL,UAAU,cACVyC,YAAY,sBACZC,SA/DgB,SAACb,GACzBZ,EAASY,EAAMc,cAAcH,OAC7Bf,GAAqB,MAgEdD,GAEG,sBAAMxB,UAAU,QAAhB,qCAIN,sBAAKA,UAAU,QAAf,UACE,uBACEsC,QAAQ,aACRtC,UAAU,QAFZ,0BAOA,yBACE,UAAQ,aACRI,GAAG,aACHN,KAAK,aACL0C,MAAOtB,EACPlB,UAAU,cACV0C,SAjFe,SAACb,GACxBV,EAAcU,EAAMc,cAAcH,OAClCjB,GAAqB,IAyEf,UAQE,wBAAQiB,MAAM,GAAGI,UAAQ,EAAzB,2BAEC/B,EAAgBH,KAAI,SAAAb,GAAI,OACvB,wBAAsB2C,MAAO3C,EAAKC,KAAlC,SAAyCD,EAAKC,MAAjCD,EAAKO,UAIrBkB,GAEG,sBAAMtB,UAAU,QAAhB,qCAIN,wBACEuC,KAAK,SACL,UAAQ,eACRvC,UAAU,SAHZ,oBASF,cAAC,EAAD,CAAUS,MAAOW,QEzIvByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fe8d2ad1.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction findUserByName(userName: string): User | null {\n  return usersFromServer.find(user => (user.name === userName)) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: findUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userSelect, setUserSelect] = useState('');\n  const [todosToRender, setTodosToRender] = useState(todos);\n  const [isErrorOnUserSelect, setErrorOnUserSelect] = useState(false);\n  const [isErrorOnTitleInput, setErrorOnTitleInput] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setErrorOnTitleInput(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelect(event.currentTarget.value);\n    setErrorOnUserSelect(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setErrorOnTitleInput(!title.trim());\n    setErrorOnUserSelect(!userSelect);\n\n    if (title.trim() === '' || !userSelect) {\n      return;\n    }\n\n    const maxTodoId = Math.max(...todosToRender.map(todo => todo.id));\n    const userToAdd = findUserByName(userSelect);\n\n    setTodosToRender(current => [\n      ...current,\n      {\n        id: maxTodoId + 1,\n        title,\n        completed: false,\n        userId: userToAdd ? userToAdd.id : null,\n        user: userToAdd,\n      },\n    ]);\n\n    setTitle('');\n    setUserSelect('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n            className=\"label\"\n          >\n            Write down your task:\n          </label>\n\n          <input\n            data-cy=\"titleInput\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            className=\"form__input\"\n            placeholder=\"Enter title of task\"\n            onChange={handleTitleChange}\n          />\n\n          {isErrorOnTitleInput\n            && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"userSelect\"\n            className=\"label\"\n          >\n            Choose user:\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={userSelect}\n            className=\"form__input\"\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>{user.name}</option>\n            ))}\n          </select>\n\n          {isErrorOnUserSelect\n            && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosToRender} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}